name: Stage the app

on: 
  pull_request:
    types: [labeled]
env:
  IMAGE_REGISTRY_URL: ghcr.io
  DOCKER_IMAGE_NAME: widolite-azure-ttt
  AZURE_WEBAPP_NAME: widolite-ttt-app
jobs:
  build:
    runs-on: ubuntu-latest
    if: cocontains(github.event.pull_request.labels.*.name, 'stage' )
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: webpack artifacts
          path: public/
          
  build-docker-image:
    runs-on: ubuntu-latest
    needs: [build]
    name: build image and store in github container registry
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: download built artifact
        uses: actions/download-artifact@v4
        with:
          name: webpack artifacts
          path: public
      - name: log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{github.actor}}
          password: ${{secrets.CR_PAT}}
      - name: extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}
          tags: |
            type=sha,format=long,prefix=
      - name: build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy-to-azure:
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    name: deploy app container to Azure
    steps:
      - run: echo "Azure login..."
      #- name: "Login via Azure CLI"
      #  uses: azure/login@v2
      #  with:
      #    creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: echo "Azure docker login..."
      #- uses: azure/docker-login@v1
      #  with:
      #    login-server: ${{env.IMAGE_REGISTRY_URL}}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.CR_PAT }}
      - run: echo "deploy to web app container."
      #- name: Deploy web app container
      #  uses: azure/webapps-deploy@v3
      #  with:
      #    app-name: ${{env.AZURE_WEBAPP_NAME}}
      #    images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}:${{ github.sha }}
      - run: echo "azure logout via Azure CLI."
      #- name: Azure logout via Azure CLI
      #  uses: azure/CLI@v2
      #  with:
      #    inlineScript: |
      #      az logout
      #      az cache purge
      #      az account clear
